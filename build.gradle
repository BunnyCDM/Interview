// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {

        //sharesdk
//        maven {
//            //url "http://mvn.mob.com/android",
//            url 'https://download.01.org/crosswalk/releases/crosswalk/android/maven2'
//        }

        jcenter()

        //google()，被以下替换，解决Gradle DSL method not found: 'google()'
        maven {
            url 'https://dl.google.com/dl/android/maven2/'
        }
        google()//Multidex
    }
    dependencies {

        //In your root build.gradle file

        classpath 'com.android.tools.build:gradle:3.4.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        classpath 'com.jakewharton:butterknife-gradle-plugin:9.0.0-rc2'

        //添加Dagger apt插件
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'

        //sharesdk
//        classpath 'com.mob.sdk:MobSDK:+'

        //AspectJX
        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.8'

    }

    //sharesdk
//    configurations.all {
//        resolutionStrategy.cacheDynamicVersionsFor 1, 'seconds'
//        //exclude group: 'com.mob', module: 'MobLink-3.0.2'
//    }
}

allprojects {
    repositories {

        jcenter()
        //本地仓库
//        maven {
//            url "http://127.0.0.1:8081/repository/com.mac.baselibrary/"
//            url "http://192.168.0.1:8081/repository/com.mac.baselibrary/"
//        }

//        mavenLocal()

        //google()，别以下替换，解决Gradle DSL method not found: 'google()'
        maven { url 'https://dl.google.com/dl/android/maven2/' }//Multidex

        maven { url "https://jitpack.io" }//BaseRecyclerViewAdapterHelper

        //sharesdk
//        maven {
//            url "http://mvn.mob.com/android"
//        }

        maven {
            url 'https://download.01.org/crosswalk/releases/crosswalk/android/maven2'
        }

        mavenCentral()
        google()//butterknife

    }

    //sharesdk
//    configurations.all {
//        resolutionStrategy.cacheDynamicVersionsFor 1, 'seconds'
//        //exclude group: 'com.mob', module: 'MobLink-3.0.2'
//    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//sharesdk
String findBuildTools() {
    def localProperties = new File(project.rootDir, "local.properties")
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream {
            instr -> properties.load(instr)
        }
        def sdkDir = properties.getProperty('sdk.dir')
        def buildTools = new File(sdkDir, "build-tools")
        if (buildTools.exists()) {
            def tools = buildTools.list()
            if (tools != null) {
                Arrays.sort(tools)
                return tools[tools.length - 1]
            }
        }
    }
    return null
}


ext {
    compileSdkVersion = 28
    buildToolsVersion = '28.0.3'
    supportLibraryVersion = "28.0.0"

    minSdkVersion = 19
    targetSdkVersion = 28

}
