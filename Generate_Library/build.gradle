apply plugin: 'com.android.library'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //指定jdk版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

task makeJar(type: Copy) { //Copy类型

    delete 'build/libs/mysdk.jar'//删除存在的

    from('build/intermediates/packaged-classes/release/') //jar文件来源

    into('build/libs/')//打进jar包后的文件目录

    /**
     * 将classes.jar放入build/libs/目录下
     * include ,exclude参数来设置过滤(我们只关心classes.jar这个文件）
     */
    include('classes.jar')

    rename('classes.jar', 'mysdk.jar')//重命名

    //过滤不需要的class
    exclude "**/**/BuildConfig.class"
    exclude "**/**/BuildConfig\$*.class"
    exclude "**/R.class"
    exclude "**/R\$*.class"
}

makeJar.dependsOn(build)
/**
 * 在终端执行生成JAR包:
 * ./gradlew makeJar
 */


